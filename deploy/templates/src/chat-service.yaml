apiVersion: v1
kind: Service
metadata:
  labels:
    service: chat-service
  name: chat-service
spec:
  ports:
  - name: tomcat
    port: 8280
    targetPort: 8280
  selector:
    app: chat-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    deployment: chat-service
  name: chat-service
spec:
  replicas: ${appReplicas}
  template:
    metadata:
      labels:
        app: chat-service
    spec:
      containers:
      - env:
        - name: eureka.client.service-url.default-zone
          value: http://service-registry.default.svc.cluster.local/eureka
        - name: eureka.instance.hostname
          value: chat-service.default.svc.cluster.local
        - name: spring.data.mongodb.host
          value: mongodb.default.svc.cluster.local
        - name: spring.data.mongodb.password
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: rootpassword
        - name: spring.data.mongodb.uri
          value: mongodb://mongodb.default.svc.cluster.local/kryption
        - name: spring.data.mongodb.username
          value: kryption
        - name: spring.rabbitmq.host
          value: rabbit.default.svc.cluster.local
        - name: spring.rabbitmq.password
          valueFrom:
            secretKeyRef:
              name: rabbit-secrets
              key: password
        - name: spring.rabbitmq.username
          value: kryption
        image: ${repo}chat-service:$version
        name: chat-service
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8280
        volumeMounts:
        - mountPath: /certs
          name: certs
        - mountPath: /trusts
          name: trusts
      restartPolicy: Always
      volumes:
      - name: certs
        secret:
          secretName: chat-service-tls
      - name: trusts
        secret:
          secretName: ca-key-pair
          items:
          - key: tls.crt
            path: tls.crt
  selector:
    matchLabels:
      app: chat-service
