image: java:8-jdk

variables:
  DOCKER_DRIVER: overlay
  REGISTRY: registry.gitlab.com/maly7/kryption-api
  AUTH_KEY_LOC: authentication-service/src/main/resources/keys

stages:
- build
- test
- publish

before_script:
- export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
  - .gradle/wrapper
  - chat-service/build
  - authentication-service/build
  - service-registry/build

.build:
  stage: build
  script:
  - ./gradlew :$APP:assemble
  - ./gradlew :$APP:versionFile
  artifacts:
    paths:
    - $APP/build
    untracked: true
  variables:
  - $APP

.publish:
  stage: publish
  image: docker:latest
  services:
  - docker:dind
  variables:
  - $APP
  script:
  - source version.txt
  - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $REGISTRY
  - docker login -u $ACR_USER -p $ACR_PASS $ACR_REGISTRY
  - docker build $APP -f $APP/Dockerfile -t $REGISTRY/$APP:latest -t $ACR_REGISTRY/$APP:latest -t $REGISTRY/$APP:$APP_VERSION -t $ACR_REGISTRY/$APP:$APP_VERSION
  only:
  - master

build_auth:
  stage: build
  script:
  - openssl genrsa -out $AUTH_KEY_LOC/private_key.pem 2048
  - openssl pkcs8 -topk8 -inform PEM -outform DER -in $AUTH_KEY_LOC/private_key.pem -out $AUTH_KEY_LOC/private_key.der -nocrypt
  - openssl rsa -in $AUTH_KEY_LOC/private_key.pem -pubout -outform DER -out $AUTH_KEY_LOC/public_key.der
  - ./gradlew :authentication-service:assemble
  - ./gradlew versionFile
  artifacts:
    paths:
    - authentication-service/build
    untracked: true

build_chat:
  extends: .build
  variables:
    APP: 'chat-service'

build_registry:
  extends: .build
  variables:
    APP: 'service-registry'

build_gateway:
  extends: .build
  variables:
    APP: 'api-gateway'

test_chat:
  stage: test
  services:
  - name: rabbitmq:3-management
    alias: rabbit
  script:
  - ./gradlew :chat-service:check -Dspring.rabbitmq.host=rabbit
  artifacts:
    when: always
    paths:
    - chat-service/build/reports

test_auth:
  stage: test
  script:
  - ./gradlew :auth-service:check
  artifacts:
    when: always
    paths:
    - auth-service/build/reports

publish_chat:
  extends: .publish
  variables:
    APP: 'chat-service'

publish_auth:
  extends: .publish
  variables:
    APP: 'authentication-service'

publish_registry:
  extends: .publish
  variables:
    APP: 'service-registry'

publish_gateway:
  extends: .publish
  variables:
    APP: 'api-gateway'
